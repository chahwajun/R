count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group = rincome)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group = 2)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, group=1)) + geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n group=1)) + geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group=1)) + geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group=1)) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group=1)) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group=rincome)) + geom_bar(stat = "identity")
# 17.3.1 ----
?ggplot
?ggplot
# 17.3.1 ----
??ggplot
# 17.3.1 ----
?ggplot
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
# 17.3.1 ----
library(ggplot2)
# 17.3.1 ----
library(ggplot)
# 17.3.1 ----
library(ggplot2)
library(tidyverse)
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop))) +
geom_bar()
?after_stat
ggplot(diamonds, aes(x = cut, y = after_stat(y), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y =(prop), group = 1)) +
geom_bar()
?geom_bar
ggplot(diamonds, aes(x = cut, y = after_stat(count), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(count))) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(count))) +
geom_bar()
?geom_point
ggplot(diamonds, aes(x = cut, y = after_stat(count), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
diamonds |>
count(cut) |>
ggplot(aes(x = cut, y = n)) +
geom_bar(stat = "identity")
diamonds |>
count(cut) |>
ggplot(aes(x = cut, y = n)) +
geom_bar()
? geom_bar()
diamonds |>
count(cut) |>
ggplot(aes(x = cut, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group = 1)) +
geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n, group = 1)) +
geom_bar()
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n) +
geom_bar(stat = "identity")
gss_cat |>
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome)) +
geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome)) +
geom_bar()
geom_bar()
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = after_stat(count)) +
geom_bar()
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = after_stat(count)) +
geom_bar(stat = "identity")
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = after_stat(count), group = 1)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome, y = after_stat(count))) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
mutate(rincome = as.character(rincome)) |>
ggplot(aes(x = rincome)) +
geom_bar(stat = "identity")
diamonds |>
count(cut) |>
ggplot(aes(x = cut, y = n)) +
geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = n)) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = stat_count(count))) + geom_bar()
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = stat_count(count))) + geom_bar()
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = stat_count(count))) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = n) + geom_bar(stat = "identity")
gss_cat |>
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = n)) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome)) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = n)) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = after_stat(count))) + geom_bar(stat = "identity")
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = after_stat(count))) + geom_bar()
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = after_stat(count), group = 1)) + geom_bar()
gss_cat |>
count(rincome) |>
ggplot(aes(x = rincome, y = after_stat(count), group = 1)) + geom_bar()
?geom_bar
ggplot(gss_cat, aes(x = rincome, y = after_stat(count))) + geom_bar()
ggplot(gss_cat, aes(x = rincome, y = after_stat(prop))) + geom_bar()
ggplot(gss_cat, aes(x = rincome, y = after_stat(prop), group = 1)) + geom_bar()
ggplot(gss_cat, aes(x = rincome, y = after_stat(prop), group = 1)) + geom_bar()
gss_cat
ggplot(gss_cat, aes(x = rincome, y = after_stat(count), group = 1)) + geom_bar()
gss_cat |>
distinct(rincome)
str_view(gss_cat$rincome)
ggplot(gss_cat, aes(x = rincome, y = after_stat(count), group = 1)) + geom_bar()
# 17.3.1 ----
library(ggplot2)
# 17.3.1 ----
library(tidyverse)
ggplot(gss_cat, aes(x = rincome, y = after_stat(count), group = 1)) + geom_bar()
# 17.3.1 ----
gss_cat |>
distinct()
# 17.3.1 ----
gss_cat |>
distinct(rincome)
# 2
gss_cat
# 2
gss_cat |>
count(relig)
# 2
gss_cat |>
count(relig, partyid)
# 2
gss_cat |>
count(partyid)
# 3
gss_cat |>
group_by(relig) |>
count(denom)
# 3
View(gss_cat |>
group_by(relig) |>
count(denom)
)
levels(gss_cat$denom)
# 3
View(gss_cat |>
group_by(denom) |>
count(relig)
)
levels(gss_cat$relig)
?fct_relevel
rincome_summary <- gss_cat |>
group_by(rincome) |>
summarize(
age = mean(age, na.rm = TRUE),
n = n()
)
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable"))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Don't know"))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable"))) +
geom_point()
levels(gss_cat$rincome)
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "No answer"))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Refused"))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable"))) +
geom_point()
?fct_relevel
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable", after = inf))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable". after = inf))) +
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable". after = 9))) +
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable", after = 9))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable", after = 12))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable", after = 1))) +
geom_point()
ggplot(rincome_summary, aes(x = age, y = fct_relevel(rincome, "Not applicable", after = 0))) +
geom_point()
geom_point()
gss_cat
library(xgxr)
library(tidyverse)
library(ggplot2)
df <- tibble(
a = rnorm(5),
b = rnorm(5),
c = rnorm(5),
d = rnorm(5),
)
library(xgxr)
library(tidyverse)
library(ggplot2)
df <- tibble(
a = rnorm(5),
b = rnorm(5),
c = rnorm(5),
d = rnorm(5),
)
df |> mutate(
a = (a - min(a, na.rm = TRUE)) /
(max(a, na.rm = TRUE) - min(a, na.rm = TRUE)),
b = (b - min(b, na.rm = TRUE)) /
(max(b, na.rm = TRUE) - min(a, na.rm = TRUE)),
c = (c - min(c, na.rm = TRUE)) /
(max(c, na.rm = TRUE) - min(c, na.rm = TRUE)),
d = (d - min(d, na.rm = TRUE)) /
(max(d, na.rm = TRUE) - min(d, na.rm = TRUE)),
)
range(1:!00)
range(1:100)
range(rnorm(100, mean = 175, sd = 20))
range(rnorm(100, mean = 175, sd = 20)) [1]
x+ 100}
x+ 100}
x + 100}
add_1-- <- function(x){
add_1 <- function(x){
x + 100}
x^2 -1}
x^2 -1}
x^2 -1}
x1 <- function(x) {
x^2 -1}
my birthday <- make_date(year = 1996, month = 4, day = 29)
my_birthday <- make_date(year = 1996, month = 4, day = 29)
my_birthday <- as.character(my_birthday)
my_birthday <- make_date(year = 1996, month = 4, day = 29)
calculate <- function(x){
today() - x
}
calculate(my_birthday)
calculate <- function(x){
(today() - x)/365
}
calculate(my_birthday)
korean <- function(x){
(today() - x)/365 +!
}
korean <- function(x){
(today() - x)/365 +1
}
korean(my_birthday)
calculate(my_birthday)
x1(2)
sister <- make_date(year = 1994, month = 4, day = 24)
calculate(sister)
as.duration(calculate(my_birthday))
mtcars
mtcars |>
summarise(mean = mean(mpg))
mtcars |>
summarise(mean = mean(cyl))
x1 <- function(var) {
mtcars |>
summarise(mean = mean(var))
}
mtcars |> x1()
x111 <- function(var) {
mtcars |>
summarise(mean = mean({{var}}))
}
x111(mpg)
x111(cyl)
x2 <- list(a = 1:2, b = 1:3, c = 1:4)
View(x2)
x2
library(tidyverse)
x2
str(x2)
x2$a
str(Theoph)
x5 <- list(1, list(2, list(3, list(4, list(5)))))
x5
x4 <- c(list(1, 2), list(3, 4))
str(x4)
str(x5)
View(x5)
df <- tibble(
x = 1:2,
y = c("a", "b"),
z = list(list(1, 2), list(3, 4, 5))
)
View(df)
View(df[[3]][[1]])
View(df[[3]][[2]])
df6 <- tribble(
~x, ~y,
"a", list(1, 2),
"b", list(3),
"c", list()
)
df4 <- tribble(
~x, ~y,
"a", list(1),
"b", list("a", TRUE, 5)
)
View(df4)
df4 |>
unnest_longer(y)
View(df4 |>
unnest_longer(y)
)
View(df4 |>
unnest_longer(y)
)
df4 |>
unnest_longer(y) |>
mutate(y = as.character(y))
View(df4 |>
unnest_longer(y)
)
df4 <- tribble(
~x, ~y,
"a", list(1),
"b", list("a", TRUE, 5)
)
View(df4 |>
unnest_longer(y)
)
gh_repos
repos <- tibble(json = gh_repos)
library(jsonlite)
library(tidyverse)
library(repurrrsive)
install.packages('repurrrsive')
library(repurrrsive)
repos <- tibble(json = gh_repos)
View(repos)
View(repos[[1]][[1]])
View(repos)
View(repos[[1]][[2]])
View(repos[[1]][[1]])
repos |>
unnest_longer(json)
repos |>
unnest_longer(json) |>
unnest_wider(json)
repos |>
unnest_longer(json) |>
unnest_wider(json) |>
select(id, full_name, owner, description)
gh_users2 <- read_json(gh_users_json())
View(gh_users2)
?sample
sample(c(NA, TRUE), 10, replace = TRUE)
sample(c(NA, asdf), 10, replace = TRUE)
sample(c(NA, 'asdf'), 10, replace = TRUE)
## 26. Functions ----
library(tidyverse)
library(nycflights13)
?range
rng <- range(x, na.rm = TRUE, finite = TRUE)
x <- (rnorm(10)
x <- (rnorm(10))
x <- (rnorm(10))
str_view(x)
rng <- range(x, na.rm = TRUE, finite = TRUE)
rng
rng(1)
rng[1]
range(1:100)
x <- range(1:100)
x
str_view(x)
?str_sub
library(tidyverse)
library(nycflights13)
library(tidyverse)
library(nycflights13)
fix_na <- function(x) {
if_else(x %in% c(997, 998, 999), NA, x)
}
x <- c(1:100)
x <- c(1:1000)
fix_na(x)
fix_na(x) |>
tail()
mape <- function(actual, predicted) {
sum(abs((actual - predicted) / actual)) / length(actual)
}
